
                              Readme File for Code Example:
                  CE017 - Reading, Erasing and Writing to dsPIC30F Data EEPROM
                  -------------------------------------------------------------

This file contains the following sections:
1. Code Example Description
2. Folder Contents
3. Suggested Development Resources
4. Reconfiguring the project for a different dsPIC30F device
5. Revision History


1. Code Example Description
-----------------------------
Many dsPIC30F devices in the dsPIC® Digital Signal Controller products feature internal or on-chip Data EEPROM (Electrically Erasable Programmable Read Only memory).
This example provides C-callable, routines to read, erase or write one word or one row of internal Data EEPROM in dsPIC30F devices. The source file containing the functions is "DataEEPROM.s". The C header file describing the function prototypes contained in this file is "DataEEPROM.h". The code example also demonstrates the use of these routines in the "main_DataEEPROM_access.c" file.
To use these functions simply, add the function prototypes (file DataEEPROM.h) and the function definitions (file DataEEPROM.s) to your project.


ReadEErow prototype:
--------------------
extern int ReadEE(int Page, int Offset, int* DataOut, int Size);

Parameters Definition:
Page:        is the 8 most significant bits of the source address in EEPROM
Offset:      is 16 least significant bits of the source address in EEPROM
DataOut:     is the 16-bit address of the destination RAM location or array
Size:        is the number of words to read from EEPROM and is a value of 1 or
             16

Return Value: Function returns ERROREE (or -1) if Size is invalid


EraseEErow prototype:
---------------------
extern int EraseEE(int Page, int Offset, int Size);

Parameters Definition:
Page:        is the 8 most significant bits of the address in EEPROM to be
             erased
Offset:      is 16 least significant bits of the address in EEPROM to be erased
Size:        is the number of words to read from EEPROM and is a value of 1, 16
             or 0xFFFF (for erasing ALL EEPROM memory)

Return Value:
Function returns ERROREE (or -1) if Size is invalid


WriteEErow prototype:
---------------------
extern int WriteEE(int* DataIn, int Page, int Offset, int Size);

Parameters Definition:
Page:        is the 8 most significant bits of the destination address in EEPROM
Offset:      is 16 least significant bits of the destination address in EEPROM
DataIn:      is the 16-bit address of the source RAM location or array
Size:        is the number of words to read from EEPROM and is a value of 1 or
             16

Return Value:
Function returns ERROREE (or -1) if Size is invalid

2. Folder Contents:
-------------------
This folder contains the following sub-folders:
a. gld
        This folder contains a linker script file for the example project.
        This file is used for building the project for a 30F6014A device.
        This file simply includes the relevant device linker script, 
        "p30F6014A.gld" and the relevant MPLAB® C30 library files, 
        "libdsp-coff.a", "libc-coff.a", and "libm-coff.a" or 
        "libdsp-elf.a", "libc-elf.a", and "libm-elf.a" from their installed 
        location. 

b. h
        This folder contains C header files useful in building this
        project. Device register and bit definitions are provided in
        the "p30F6014A.h" file, which may be found in the installation folder
        of the MPLAB® C30 toolsuite.

c. hex
        This folder contains three file types - coff, hex and map.
        These are files generated by the MPLAB® C30 toolsuite on build
        operation performed within MPLAB® IDE. The *.map file contains
        details on memory allocation for various variables, constants
        and dsPIC30F instructions specified in the source and library
        code. The *.hex file contains a binary file that may be
        programmed into the dsPIC30F device. The *.coff file contains
        a binary file that is used by MPLAB® IDE for simulation.

d. src
        This folder contains all the C and Assembler source files (*.c,
        *.s) used in demonstrating the described example. This folder
        also contains a sub-folder named "obj" that stores compiled
        object files generated when the project is built.

3. Suggested Development Resources:
-----------------------------------
        a. MPLAB® IDE v7.22 or later
        b. MPLAB® C30 v1.33 or later
        c. MPLAB® ICD 2 R23 or later
        d. dsPICDEM™ 1.1 Development Board (See below)
        e. dsPIC30F6014A Digital Signal Controller Plug-In Module (See below)

4. Reconfiguring the project for a different dsPIC30F device:
-------------------------------------------------------------
The Project/Workspace can be easily reconfigured for any dsPIC30F device.
Please use the following general guidelines:
        a. Change device selection within MPLAB® IDE to a dsPIC30F device of
        your choice by using the following menu option:
        MPLAB IDE>>Configure>>Select Device

        b. Provide the correct device linker script and header file for your
        device. Device linker scripts and header files are available in your
        MPLAB® C30 installation folder under:
        Device Linker Script-
                YourDrive:>Program Files\Microchip\MPLAB C30\support\gld
        Device C Header file-
                YourDrive:>Program Files\Microchip\MPLAB C30\support\h
        Device ASM Include file-
                YourDrive:>Program Files\Microchip\MPLAB C30\support\inc

        c. Provide the appropriate path to your MPLAB C30 support file locations
        using the menu option:
        MPLAB IDE>>Project>>Build Options>>Project

        d. Chose the development board applicable to your device. Some options
        are provided below:
        - dsPICDEM™ 2 Development Board supports:
          30F2010, 30F2011, 30F2012, 30F3010, 30F3011, 30F3012, 30F3013,
          30F3014, 30F4011, 30F4012, 30F4013

        - dsPICDEM™ 1.1 Development Board supports:
          30F5013, 30F6010, 30F6011, 30F6012, 30F6013, 30F6014,
          30F6011A, 30F6012A, 30F6013A, 30F6014A

        - dsPICDEM™ MC1 Development Board supports:
          30F6010, 30F6010A, 30F5016

        e. Re-build the MPLAB® project using the menu option:
        MPLAB IDE>>Project>>Build All

        f. Download the hex file into the device and run.

5. Revision History :
---------------------
        11/02/2005 - Initial Release of the Code Example


